{"ast":null,"code":"import streams from \"../apis/streams\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from \"./types\";\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post('/streams', { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/wfairhead/Documents/ownership/React/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","fetchStreams","get","editStream","id","put","fetchStream","deleteStream","delete"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,iBAApB;AACA,SACIC,OADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,YALJ,EAMIC,aANJ,EAOIC,WAPJ,QAQO,SARP;AAUA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAET,OADH;AAEHU,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAER;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMW,YAAY,GAAGC,UAAU,IAAI,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACpE,QAAM;AAACP,IAAAA;AAAD,MAAWO,QAAQ,GAAGC,IAA5B;AACA,QAAMC,QAAQ,GAAG,MAAMlB,OAAO,CAACmB,IAAR,CAAa,UAAb,EAAyB,EAAC,GAAGL,UAAJ;AAAgBL,IAAAA;AAAhB,GAAzB,CAAvB;AAGAM,EAAAA,QAAQ,CAAC;AAAEL,IAAAA,IAAI,EAAEP,aAAR;AAAuBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAzC,GAAD,CAAR;AACH,CANM;AAOP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMN,QAAN,IAAkB;AAChD,QAAMG,QAAQ,GAAG,MAAMlB,OAAO,CAACsB,GAAR,CAAY,UAAZ,CAAvB;AAEAP,EAAAA,QAAQ,CAAE;AAACL,IAAAA,IAAI,EAAEN,aAAP;AAAsBO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAF,CAAR;AACH,CAJM;AAMP,OAAO,MAAMG,UAAU,GAAG,CAACC,EAAD,EAAKV,UAAL,KAAoB,MAAMC,QAAN,IAAkB;AAC5D,QAAMG,QAAQ,GAAG,MAAMlB,OAAO,CAACyB,GAAR,CAAa,YAAWD,EAAG,EAA3B,EAA8BV,UAA9B,CAAvB;AAEAC,EAAAA,QAAQ,CAAE;AAAEL,IAAAA,IAAI,EAAEH,WAAR;AAAqBI,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAF,CAAR;AACH,CAJM;AAKP,OAAO,MAAMM,WAAW,GAAGF,EAAE,IAAI,MAAMT,QAAN,IAAkB;AAC/C,QAAMG,QAAQ,GAAG,MAAMlB,OAAO,CAACsB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAT,EAAAA,QAAQ,CAAE;AAAEL,IAAAA,IAAI,EAAEL,YAAR;AAAsBM,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAF,CAAR;AACH,CAJM;AAKP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAMT,QAAN,IAAkB;AAClD,QAAMf,OAAO,CAAC4B,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AAEAT,EAAAA,QAAQ,CAAE;AAAEL,IAAAA,IAAI,EAAEJ,aAAR;AAAuBK,IAAAA,OAAO,EAAEa;AAAhC,GAAF,CAAR;AACH,CAJM","sourcesContent":["import streams from \"../apis/streams\";\nimport {\n    SIGN_IN,\n    SIGN_OUT,\n    CREATE_STREAM,\n    FETCH_STREAMS,\n    FETCH_STREAM,\n    DELETE_STREAM,\n    EDIT_STREAM\n} from \"./types\";\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n}\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n}\n\nexport const createStream = formValues => async (dispatch, getState) => {\n    const {userId} = getState().auth\n    const response = await streams.post('/streams', {...formValues, userId});\n\n\n    dispatch({ type: CREATE_STREAM, payload: response.data })\n}\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get('/streams');\n\n    dispatch ({type: FETCH_STREAMS, payload: response.data})\n}\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await streams.put(`/streams/${id}`, formValues)\n\n    dispatch ({ type: EDIT_STREAM, payload: response.data})\n}\nexport const fetchStream = id => async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n\n    dispatch ({ type: FETCH_STREAM, payload: response.data})\n}\nexport const deleteStream = (id) => async dispatch => {\n    await streams.delete(`/streams/${id}`);\n\n    dispatch ({ type: DELETE_STREAM, payload: id})\n}\n"]},"metadata":{},"sourceType":"module"}