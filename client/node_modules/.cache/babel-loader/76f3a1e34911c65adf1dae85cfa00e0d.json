{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/wfairhead/Documents/ownership/React/streams/client/src/components/streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from \"../../actions\";\nimport { Link } from 'react-router-dom';\n\nclass StreamList extends React.Component {\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderAdmin(stream) {\n    if (stream.userId === this.props.currentUserID) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right floated content\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/streams/edit/${stream.id}`,\n          className: \"ui button primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/streams/delete/${stream.id}`,\n          className: \"ui button negative\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [this.renderAdmin(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/streams/${stream.id}`,\n            className: \"header\",\n            children: stream.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          children: \"Create Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.renderList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), this.renderCreate()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserID: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/Users/wfairhead/Documents/ownership/React/streams/client/src/components/streams/StreamList.js"],"names":["React","connect","fetchStreams","Link","StreamList","Component","componentDidMount","props","renderAdmin","stream","userId","currentUserID","id","renderList","streams","map","title","description","renderCreate","isSignedIn","textAlign","render","mapStateToProps","state","Object","values","auth"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport { fetchStreams } from \"../../actions\";\nimport {Link} from 'react-router-dom'\n\nclass StreamList extends React.Component  {\n    componentDidMount() {\n        this.props.fetchStreams()\n    }\n\n    renderAdmin(stream) {\n        if(stream.userId === this.props.currentUserID) {\n            return (\n                <div className=\"right floated content\">\n                    <Link to={`/streams/edit/${stream.id}`}  className=\"ui button primary\">Edit</Link>\n                    <Link to={`/streams/delete/${stream.id}`}  className=\"ui button negative\">Delete</Link>\n                </div>\n            )\n        }\n    }\n\n    renderList (){\n        return this.props.streams.map(stream => {\n            return (\n                <div className=\"item\" key={stream.id}>\n                    {this.renderAdmin(stream)}\n                    <i className=\"large middle aligned icon camera\"></i>\n                    <div className=\"content\">\n                        <Link to={`/streams/${stream.id}`} className=\"header\">{stream.title}</Link>\n                        <div className=\"description\">\n                            {stream.description}\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    renderCreate() {\n        if (this.props.isSignedIn) {\n            return (\n                <div style={{ textAlign: 'right'}}>\n                    <Link to=\"/streams/new\" className=\"ui button primary\">Create Stream</Link>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">\n                    {this.renderList()}\n                </div>\n                {this.renderCreate()}\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        streams: Object.values(state.streams),\n        currentUserID: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn\n    };\n}\n\nexport default connect(mapStateToProps, {fetchStreams})(StreamList);\n"]},"metadata":{},"sourceType":"module"}