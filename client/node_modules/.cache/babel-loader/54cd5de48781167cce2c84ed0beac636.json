{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/wfairhead/Documents/ownership/React/streams/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { Field, formValues, reduxForm } from \"redux-form\";\n\nclass StreamCreate extends React.Component {\n  renderTextInput({\n    input,\n    label\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n\n  onSubmit(formValues) {// console.log(formValues)\n  }\n\n  render() {\n    // console.log(this.props)\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"title\",\n        label: \"Enter Title\",\n        component: this.renderTextInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"description\",\n        label: \"Enter Description\",\n        component: this.renderTextInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button ui primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: reset,\n        children: \"Clear Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    // only if user if the user did not enter a title\n    errors.title = 'You must enter a title';\n  }\n\n  if (!formValues.description) {\n    // only if user if the user did not enter a description\n    errors.description = 'You must enter a description';\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate: validate\n})(StreamCreate);","map":{"version":3,"sources":["/Users/wfairhead/Documents/ownership/React/streams/client/src/components/streams/StreamCreate.js"],"names":["React","Field","formValues","reduxForm","StreamCreate","Component","renderTextInput","input","label","onSubmit","render","props","handleSubmit","reset","validate","errors","title","description","form"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,UAAf,EAA2BC,SAA3B,QAA2C,YAA3C;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACvCC,EAAAA,eAAe,CAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,EAAiB;AAC5B,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA,kBAAQA;AAAR;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,sBAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAEDE,EAAAA,QAAQ,CAACP,UAAD,EAAa,CACjB;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL;AACA,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKH,QAA7B,CAAhB;AAAwD,MAAA,SAAS,EAAC,SAAlE;AAAA,8BAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAC,aAA1B;AAAwC,QAAA,SAAS,EAAE,KAAKH;AAAxD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,KAAK,EAAC,mBAAhC;AAAoD,QAAA,SAAS,EAAE,KAAKA;AAApE;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEO,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AA/BsC;;AAkC3C,MAAMC,QAAQ,GAAGZ,UAAU,IAAI;AAC3B,QAAMa,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACb,UAAU,CAACc,KAAhB,EAAuB;AACnB;AACAD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACH;;AAED,MAAI,CAACd,UAAU,CAACe,WAAhB,EAA6B;AACzB;AACAF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACH;;AAED,SAAOF,MAAP;AACH,CAdD;;AAgBA,eAAeZ,SAAS,CAAC;AACrBe,EAAAA,IAAI,EAAE,cADe;AAErBJ,EAAAA,QAAQ,EAAEA;AAFW,CAAD,CAAT,CAGZV,YAHY,CAAf","sourcesContent":["import React from 'react'\nimport {Field, formValues, reduxForm} from \"redux-form\";\n\nclass StreamCreate extends React.Component {\n    renderTextInput({input, label}) {\n        return  (\n            <div className=\"field\">\n                <label>{label}</label>\n                <input {...input} />\n            </div>\n        )\n    }\n\n    onSubmit(formValues) {\n        // console.log(formValues)\n    }\n\n    render() {\n        // console.log(this.props)\n        return (\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\n\n                <Field name=\"title\" label=\"Enter Title\" component={this.renderTextInput}/>\n                <Field name=\"description\" label=\"Enter Description\" component={this.renderTextInput}/>\n\n                <button type=\"submit\" className=\"button ui primary\">\n                    Submit\n                </button>\n                <button type=\"button\" onClick={reset}>\n                    Clear Values\n                </button>\n\n            </form>\n        )\n    }\n}\n\nconst validate = formValues => {\n    const errors = {};\n\n    if (!formValues.title) {\n        // only if user if the user did not enter a title\n        errors.title = 'You must enter a title'\n    }\n\n    if (!formValues.description) {\n        // only if user if the user did not enter a description\n        errors.description = 'You must enter a description'\n    }\n\n    return errors;\n}\n\nexport default reduxForm({\n    form: 'streamCreate',\n    validate: validate\n})(StreamCreate)\n"]},"metadata":{},"sourceType":"module"}